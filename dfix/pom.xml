<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>DFIXRouter</artifactId>
        <groupId>com.mubasher.oms</groupId>
        <version>1.0.0</version>
    </parent>
    <artifactId>dfix</artifactId>
    <modelVersion>4.0.0</modelVersion>
    <version>${DFIXRTR-VERSION}</version>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <finalName>${DFIXRTR-VERSION}</finalName>

        <testOutputDirectory>target/test-classes</testOutputDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Specification-Vendor>Mubasher</Specification-Vendor>
                            <Implementation-Vendor>Mubasher</Implementation-Vendor>
                            <Sealed>false</Sealed>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <configuration>
                    <finalName>${DFIXRTR-VERSION}</finalName>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <artifactSet>
                        <includes>
                            <include>com.isi:cryptohandler:*</include>
                        </includes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <properties>
                        <excludeTags>slow</excludeTags>
                    </properties>
                    <systemPropertyVariables>
                        <base.dir>${basedir}</base.dir>
                    </systemPropertyVariables>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.basedir}\src\main\external-resources\lib\JBOSS_7_EAP\</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
                <dependencies>
                    <dependency>  <!--test engine run test written using junit-jupitor api-->
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <id>obfuscate</id>
                        <configuration>
                            <target>
                                <property
                                        name="project.jar"
                                        value="${project.build.directory}/${project.build.finalName}.jar"/>
                                <property
                                        name="project.jar.unobf"
                                        value="${project.build.directory}/${project.build.finalName}_yguard.jar"/>
                                <move
                                        file="${project.jar}"
                                        tofile="${project.jar.unobf}"
                                        verbose="true"/>
                                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                                <taskdef name="yguard" classname="com.yworks.yguard.YGuardTask" classpath="${runtime_classpath}"/>
                                <yguard>
                                        <inoutpair in="${project.jar.unobf}" out="${project.jar}" />
                                        <!--Prevent yGuard from removing "Deprecated" attributes from .class files.-->
                                        <attribute name="Deprecated"/>

                                        <!-- keep external classes for while obfuscating-->
                                        <externalclasses/>
                                        <rename logfile="${project.build.directory}/${project.build.finalName}_renamelog.xml">
                                        <!--ref : https://github.com/yWorks/yGuard/blob/master/docs/task_documentation.md-->
                                            <keep>
                                                <class name="com.mubasher.oms.dfixrouter.server.DFIXRouterManager"/>
                                                <method  class="com.mubasher.oms.dfixrouter.server.DFIXRouterManager" name="void main(java.lang.String[])"/>
                                                <class name="class com.mubasher.oms.dfixrouter.server.exchange.messageprocessor.ExchangeMessageProcessorI" methods="private" fields="private"/>
                                                <class implements="com.mubasher.oms.dfixrouter.server.exchange.messageprocessor.ExchangeMessageProcessorI" methods="private" fields="private"/>
                                                <class implements="java.io.Serializable" methods="private" fields="private"/>
                                            </keep>
                                        </rename>
                                </yguard>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.yworks</groupId>
            <artifactId>yguard</artifactId>
            <version>4.1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.yworks</groupId>
            <artifactId>annotation</artifactId>
            <version>4.1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dfn.dfn-watchdog</groupId>
            <artifactId>agent</artifactId>
            <version>${FALCON_AGENT_VERSION}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4jVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4jVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.quickfixj</groupId>
            <artifactId>quickfixj-all</artifactId>
            <version>2.3.1_DFN_1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>j2ee</groupId>
            <artifactId>j2ee</artifactId>
            <version>1.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jgl3.1.0</groupId>
            <artifactId>jgl3.1.0</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>FORX_Analyzer</groupId>
            <artifactId>FORX_Analyzer</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <version>2.2.2</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <version>4.2.22.Final</version> <!-- latest verison 5 + req JDK 11-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Dependency needed for Mockito static mocking using Instrumentation API       -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>4.11.0</version> <!-- latest 5.2 req JDK11+-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.mq</groupId>
            <artifactId>com.ibm.mq.allclient</artifactId>
            <version>9.3.0.20</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!--test engine run test written using junit-jupiter api (Junit 5)-->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>3.1.6</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.objenesis</groupId>
                    <artifactId>objenesis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <version>3.1.6</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>byte-buddy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.4</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnp-client</artifactId>
            <version>5.0.5.Final</version>
            <scope>test</scope><!--Corresponding jar available in lib/JBOSS_6 and lib/JBOSS_5-->
        </dependency>
        <dependency>
            <groupId>com.isi</groupId>
            <artifactId>cryptohandler</artifactId>
            <version>1.01</version>
        </dependency>
<!--        from java 11 onwards 'javax.xml' no longer included with JDK-->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.logging/jboss-logging -->
        <dependency> <!-- org.jnp.interfaces.NamingContext , org/jboss/logging/Logger -->
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>3.4.3.Final</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>internal</id>
            <url>https://jfrog.directfn.net/artifactory/dfn-trade/</url>
        </repository>
        <repository>
            <id>snapshots1</id>
            <url>https://jfrog.directfn.net/artifactory/snapshots/</url>
        </repository>

    </repositories>
</project>
